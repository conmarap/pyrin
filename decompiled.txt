
libpyrin.so:     file format elf64-x86-64


Disassembly of section .init:

0000000000000760 <_init>:
 760:	48 83 ec 08          	sub    $0x8,%rsp
 764:	48 8b 05 75 18 20 00 	mov    0x201875(%rip),%rax        # 201fe0 <_DYNAMIC+0x1c8>
 76b:	48 85 c0             	test   %rax,%rax
 76e:	74 05                	je     775 <_init+0x15>
 770:	e8 bb 00 00 00       	callq  830 <ps_rand@plt+0x10>
 775:	48 83 c4 08          	add    $0x8,%rsp
 779:	c3                   	retq   

Disassembly of section .plt:

0000000000000780 <m_djb_hash@plt-0x10>:
 780:	ff 35 82 18 20 00    	pushq  0x201882(%rip)        # 202008 <_GLOBAL_OFFSET_TABLE_+0x8>
 786:	ff 25 84 18 20 00    	jmpq   *0x201884(%rip)        # 202010 <_GLOBAL_OFFSET_TABLE_+0x10>
 78c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000790 <m_djb_hash@plt>:
 790:	ff 25 82 18 20 00    	jmpq   *0x201882(%rip)        # 202018 <_GLOBAL_OFFSET_TABLE_+0x18>
 796:	68 00 00 00 00       	pushq  $0x0
 79b:	e9 e0 ff ff ff       	jmpq   780 <_init+0x20>

00000000000007a0 <strncpy@plt>:
 7a0:	ff 25 7a 18 20 00    	jmpq   *0x20187a(%rip)        # 202020 <_GLOBAL_OFFSET_TABLE_+0x20>
 7a6:	68 01 00 00 00       	pushq  $0x1
 7ab:	e9 d0 ff ff ff       	jmpq   780 <_init+0x20>

00000000000007b0 <ceil@plt>:
 7b0:	ff 25 72 18 20 00    	jmpq   *0x201872(%rip)        # 202028 <_GLOBAL_OFFSET_TABLE_+0x28>
 7b6:	68 02 00 00 00       	pushq  $0x2
 7bb:	e9 c0 ff ff ff       	jmpq   780 <_init+0x20>

00000000000007c0 <ltostr@plt>:
 7c0:	ff 25 6a 18 20 00    	jmpq   *0x20186a(%rip)        # 202030 <_GLOBAL_OFFSET_TABLE_+0x30>
 7c6:	68 03 00 00 00       	pushq  $0x3
 7cb:	e9 b0 ff ff ff       	jmpq   780 <_init+0x20>

00000000000007d0 <strlen@plt>:
 7d0:	ff 25 62 18 20 00    	jmpq   *0x201862(%rip)        # 202038 <_GLOBAL_OFFSET_TABLE_+0x38>
 7d6:	68 04 00 00 00       	pushq  $0x4
 7db:	e9 a0 ff ff ff       	jmpq   780 <_init+0x20>

00000000000007e0 <__stack_chk_fail@plt>:
 7e0:	ff 25 5a 18 20 00    	jmpq   *0x20185a(%rip)        # 202040 <_GLOBAL_OFFSET_TABLE_+0x40>
 7e6:	68 05 00 00 00       	pushq  $0x5
 7eb:	e9 90 ff ff ff       	jmpq   780 <_init+0x20>

00000000000007f0 <pyrin@plt>:
 7f0:	ff 25 52 18 20 00    	jmpq   *0x201852(%rip)        # 202048 <_GLOBAL_OFFSET_TABLE_+0x48>
 7f6:	68 06 00 00 00       	pushq  $0x6
 7fb:	e9 80 ff ff ff       	jmpq   780 <_init+0x20>

0000000000000800 <malloc@plt>:
 800:	ff 25 4a 18 20 00    	jmpq   *0x20184a(%rip)        # 202050 <_GLOBAL_OFFSET_TABLE_+0x50>
 806:	68 07 00 00 00       	pushq  $0x7
 80b:	e9 70 ff ff ff       	jmpq   780 <_init+0x20>

0000000000000810 <p_rand@plt>:
 810:	ff 25 42 18 20 00    	jmpq   *0x201842(%rip)        # 202058 <_GLOBAL_OFFSET_TABLE_+0x58>
 816:	68 08 00 00 00       	pushq  $0x8
 81b:	e9 60 ff ff ff       	jmpq   780 <_init+0x20>

0000000000000820 <ps_rand@plt>:
 820:	ff 25 3a 18 20 00    	jmpq   *0x20183a(%rip)        # 202060 <_GLOBAL_OFFSET_TABLE_+0x60>
 826:	68 09 00 00 00       	pushq  $0x9
 82b:	e9 50 ff ff ff       	jmpq   780 <_init+0x20>

Disassembly of section .plt.got:

0000000000000830 <.plt.got>:
 830:	ff 25 aa 17 20 00    	jmpq   *0x2017aa(%rip)        # 201fe0 <_DYNAMIC+0x1c8>
 836:	66 90                	xchg   %ax,%ax
 838:	ff 25 ba 17 20 00    	jmpq   *0x2017ba(%rip)        # 201ff8 <_DYNAMIC+0x1e0>
 83e:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000000840 <deregister_tm_clones>:
 840:	48 8d 3d 29 18 20 00 	lea    0x201829(%rip),%rdi        # 202070 <_edata>
 847:	48 8d 05 29 18 20 00 	lea    0x201829(%rip),%rax        # 202077 <_edata+0x7>
 84e:	55                   	push   %rbp
 84f:	48 29 f8             	sub    %rdi,%rax
 852:	48 89 e5             	mov    %rsp,%rbp
 855:	48 83 f8 0e          	cmp    $0xe,%rax
 859:	76 15                	jbe    870 <deregister_tm_clones+0x30>
 85b:	48 8b 05 76 17 20 00 	mov    0x201776(%rip),%rax        # 201fd8 <_DYNAMIC+0x1c0>
 862:	48 85 c0             	test   %rax,%rax
 865:	74 09                	je     870 <deregister_tm_clones+0x30>
 867:	5d                   	pop    %rbp
 868:	ff e0                	jmpq   *%rax
 86a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
 870:	5d                   	pop    %rbp
 871:	c3                   	retq   
 872:	0f 1f 40 00          	nopl   0x0(%rax)
 876:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 87d:	00 00 00 

0000000000000880 <register_tm_clones>:
 880:	48 8d 3d e9 17 20 00 	lea    0x2017e9(%rip),%rdi        # 202070 <_edata>
 887:	48 8d 35 e2 17 20 00 	lea    0x2017e2(%rip),%rsi        # 202070 <_edata>
 88e:	55                   	push   %rbp
 88f:	48 29 fe             	sub    %rdi,%rsi
 892:	48 89 e5             	mov    %rsp,%rbp
 895:	48 c1 fe 03          	sar    $0x3,%rsi
 899:	48 89 f0             	mov    %rsi,%rax
 89c:	48 c1 e8 3f          	shr    $0x3f,%rax
 8a0:	48 01 c6             	add    %rax,%rsi
 8a3:	48 d1 fe             	sar    %rsi
 8a6:	74 18                	je     8c0 <register_tm_clones+0x40>
 8a8:	48 8b 05 41 17 20 00 	mov    0x201741(%rip),%rax        # 201ff0 <_DYNAMIC+0x1d8>
 8af:	48 85 c0             	test   %rax,%rax
 8b2:	74 0c                	je     8c0 <register_tm_clones+0x40>
 8b4:	5d                   	pop    %rbp
 8b5:	ff e0                	jmpq   *%rax
 8b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
 8be:	00 00 
 8c0:	5d                   	pop    %rbp
 8c1:	c3                   	retq   
 8c2:	0f 1f 40 00          	nopl   0x0(%rax)
 8c6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 8cd:	00 00 00 

00000000000008d0 <__do_global_dtors_aux>:
 8d0:	80 3d 99 17 20 00 00 	cmpb   $0x0,0x201799(%rip)        # 202070 <_edata>
 8d7:	75 27                	jne    900 <__do_global_dtors_aux+0x30>
 8d9:	48 83 3d 17 17 20 00 	cmpq   $0x0,0x201717(%rip)        # 201ff8 <_DYNAMIC+0x1e0>
 8e0:	00 
 8e1:	55                   	push   %rbp
 8e2:	48 89 e5             	mov    %rsp,%rbp
 8e5:	74 0c                	je     8f3 <__do_global_dtors_aux+0x23>
 8e7:	48 8b 3d 7a 17 20 00 	mov    0x20177a(%rip),%rdi        # 202068 <__dso_handle>
 8ee:	e8 45 ff ff ff       	callq  838 <ps_rand@plt+0x18>
 8f3:	e8 48 ff ff ff       	callq  840 <deregister_tm_clones>
 8f8:	5d                   	pop    %rbp
 8f9:	c6 05 70 17 20 00 01 	movb   $0x1,0x201770(%rip)        # 202070 <_edata>
 900:	f3 c3                	repz retq 
 902:	0f 1f 40 00          	nopl   0x0(%rax)
 906:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 90d:	00 00 00 

0000000000000910 <frame_dummy>:
 910:	48 8d 3d f9 14 20 00 	lea    0x2014f9(%rip),%rdi        # 201e10 <__JCR_END__>
 917:	48 83 3f 00          	cmpq   $0x0,(%rdi)
 91b:	75 0b                	jne    928 <frame_dummy+0x18>
 91d:	e9 5e ff ff ff       	jmpq   880 <register_tm_clones>
 922:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
 928:	48 8b 05 b9 16 20 00 	mov    0x2016b9(%rip),%rax        # 201fe8 <_DYNAMIC+0x1d0>
 92f:	48 85 c0             	test   %rax,%rax
 932:	74 e9                	je     91d <frame_dummy+0xd>
 934:	55                   	push   %rbp
 935:	48 89 e5             	mov    %rsp,%rbp
 938:	ff d0                	callq  *%rax
 93a:	5d                   	pop    %rbp
 93b:	e9 40 ff ff ff       	jmpq   880 <register_tm_clones>

0000000000000940 <ceil>:
 940:	55                   	push   %rbp
 941:	48 89 e5             	mov    %rsp,%rbp
 944:	f3 0f 11 45 ec       	movss  %xmm0,-0x14(%rbp)
 949:	f3 0f 10 45 ec       	movss  -0x14(%rbp),%xmm0
 94e:	f3 0f 2c c0          	cvttss2si %xmm0,%eax
 952:	89 45 fc             	mov    %eax,-0x4(%rbp)
 955:	66 0f ef c0          	pxor   %xmm0,%xmm0
 959:	f3 0f 2a 45 fc       	cvtsi2ssl -0x4(%rbp),%xmm0
 95e:	0f 2e 45 ec          	ucomiss -0x14(%rbp),%xmm0
 962:	7a 0b                	jp     96f <ceil+0x2f>
 964:	0f 2e 45 ec          	ucomiss -0x14(%rbp),%xmm0
 968:	75 05                	jne    96f <ceil+0x2f>
 96a:	8b 45 fc             	mov    -0x4(%rbp),%eax
 96d:	eb 06                	jmp    975 <ceil+0x35>
 96f:	8b 45 fc             	mov    -0x4(%rbp),%eax
 972:	83 c0 01             	add    $0x1,%eax
 975:	5d                   	pop    %rbp
 976:	c3                   	retq   

0000000000000977 <ps_rand>:
 977:	55                   	push   %rbp
 978:	48 89 e5             	mov    %rsp,%rbp
 97b:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 97f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 983:	48 89 05 f6 16 20 00 	mov    %rax,0x2016f6(%rip)        # 202080 <seed_next>
 98a:	90                   	nop
 98b:	5d                   	pop    %rbp
 98c:	c3                   	retq   

000000000000098d <p_rand>:
 98d:	55                   	push   %rbp
 98e:	48 89 e5             	mov    %rsp,%rbp
 991:	48 8b 05 e8 16 20 00 	mov    0x2016e8(%rip),%rax        # 202080 <seed_next>
 998:	48 89 c7             	mov    %rax,%rdi
 99b:	e8 f0 fd ff ff       	callq  790 <m_djb_hash@plt>
 9a0:	48 89 05 d1 16 20 00 	mov    %rax,0x2016d1(%rip)        # 202078 <random_number>
 9a7:	48 8b 05 ca 16 20 00 	mov    0x2016ca(%rip),%rax        # 202078 <random_number>
 9ae:	be 10 00 00 00       	mov    $0x10,%esi
 9b3:	48 89 c7             	mov    %rax,%rdi
 9b6:	e8 05 fe ff ff       	callq  7c0 <ltostr@plt>
 9bb:	48 89 05 be 16 20 00 	mov    %rax,0x2016be(%rip)        # 202080 <seed_next>
 9c2:	48 8b 05 af 16 20 00 	mov    0x2016af(%rip),%rax        # 202078 <random_number>
 9c9:	5d                   	pop    %rbp
 9ca:	c3                   	retq   

00000000000009cb <m_djb_hash>:
 9cb:	55                   	push   %rbp
 9cc:	48 89 e5             	mov    %rsp,%rbp
 9cf:	48 83 ec 30          	sub    $0x30,%rsp
 9d3:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
 9d7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 9db:	48 89 c7             	mov    %rax,%rdi
 9de:	e8 ed fd ff ff       	callq  7d0 <strlen@plt>
 9e3:	89 45 f4             	mov    %eax,-0xc(%rbp)
 9e6:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
 9ed:	00 
 9ee:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
 9f2:	75 06                	jne    9fa <m_djb_hash+0x2f>
 9f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 9f8:	eb 4e                	jmp    a48 <m_djb_hash+0x7d>
 9fa:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
 a01:	eb 39                	jmp    a3c <m_djb_hash+0x71>
 a03:	8b 45 f0             	mov    -0x10(%rbp),%eax
 a06:	48 63 d0             	movslq %eax,%rdx
 a09:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 a0d:	48 01 d0             	add    %rdx,%rax
 a10:	0f b6 00             	movzbl (%rax),%eax
 a13:	88 45 ef             	mov    %al,-0x11(%rbp)
 a16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 a1a:	48 c1 e0 05          	shl    $0x5,%rax
 a1e:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
 a22:	48 89 c2             	mov    %rax,%rdx
 a25:	0f b6 45 ef          	movzbl -0x11(%rbp),%eax
 a29:	48 01 d0             	add    %rdx,%rax
 a2c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 a30:	48 81 65 f8 ff ff ff 	andq   $0x7fffffff,-0x8(%rbp)
 a37:	7f 
 a38:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
 a3c:	8b 45 f0             	mov    -0x10(%rbp),%eax
 a3f:	3b 45 f4             	cmp    -0xc(%rbp),%eax
 a42:	7c bf                	jl     a03 <m_djb_hash+0x38>
 a44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 a48:	c9                   	leaveq 
 a49:	c3                   	retq   

0000000000000a4a <pyrin>:
 a4a:	55                   	push   %rbp
 a4b:	48 89 e5             	mov    %rsp,%rbp
 a4e:	41 54                	push   %r12
 a50:	53                   	push   %rbx
 a51:	48 81 ec 90 00 00 00 	sub    $0x90,%rsp
 a58:	48 89 bd 68 ff ff ff 	mov    %rdi,-0x98(%rbp)
 a5f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
 a66:	00 00 
 a68:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 a6c:	31 c0                	xor    %eax,%eax
 a6e:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
 a75:	48 89 c7             	mov    %rax,%rdi
 a78:	e8 53 fd ff ff       	callq  7d0 <strlen@plt>
 a7d:	89 45 88             	mov    %eax,-0x78(%rbp)
 a80:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
 a87:	48 89 c7             	mov    %rax,%rdi
 a8a:	e8 91 fd ff ff       	callq  820 <ps_rand@plt>
 a8f:	bf 40 00 00 00       	mov    $0x40,%edi
 a94:	e8 67 fd ff ff       	callq  800 <malloc@plt>
 a99:	48 89 45 90          	mov    %rax,-0x70(%rbp)
 a9d:	c7 85 74 ff ff ff 00 	movl   $0x0,-0x8c(%rbp)
 aa4:	00 00 00 
 aa7:	eb 41                	jmp    aea <pyrin+0xa0>
 aa9:	e8 62 fd ff ff       	callq  810 <p_rand@plt>
 aae:	48 89 c1             	mov    %rax,%rcx
 ab1:	48 ba b1 d7 65 fc fd 	movabs $0x97b7a8fdfc65d7b1,%rdx
 ab8:	a8 b7 97 
 abb:	48 89 c8             	mov    %rcx,%rax
 abe:	48 f7 e2             	mul    %rdx
 ac1:	48 89 d0             	mov    %rdx,%rax
 ac4:	48 c1 e8 0f          	shr    $0xf,%rax
 ac8:	48 69 c0 fb d7 00 00 	imul   $0xd7fb,%rax,%rax
 acf:	48 29 c1             	sub    %rax,%rcx
 ad2:	48 89 c8             	mov    %rcx,%rax
 ad5:	89 c2                	mov    %eax,%edx
 ad7:	8b 85 74 ff ff ff    	mov    -0x8c(%rbp),%eax
 add:	48 98                	cltq   
 adf:	88 54 05 a0          	mov    %dl,-0x60(%rbp,%rax,1)
 ae3:	83 85 74 ff ff ff 01 	addl   $0x1,-0x8c(%rbp)
 aea:	83 bd 74 ff ff ff 3f 	cmpl   $0x3f,-0x8c(%rbp)
 af1:	7e b6                	jle    aa9 <pyrin+0x5f>
 af3:	83 7d 88 40          	cmpl   $0x40,-0x78(%rbp)
 af7:	0f 8f be 00 00 00    	jg     bbb <pyrin+0x171>
 afd:	c7 85 78 ff ff ff 00 	movl   $0x0,-0x88(%rbp)
 b04:	00 00 00 
 b07:	e9 9d 00 00 00       	jmpq   ba9 <pyrin+0x15f>
 b0c:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax
 b12:	3b 45 88             	cmp    -0x78(%rbp),%eax
 b15:	7d 3b                	jge    b52 <pyrin+0x108>
 b17:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax
 b1d:	48 63 d0             	movslq %eax,%rdx
 b20:	48 8b 45 90          	mov    -0x70(%rbp),%rax
 b24:	48 01 c2             	add    %rax,%rdx
 b27:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax
 b2d:	48 98                	cltq   
 b2f:	0f b6 44 05 a0       	movzbl -0x60(%rbp,%rax,1),%eax
 b34:	89 c6                	mov    %eax,%esi
 b36:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax
 b3c:	48 63 c8             	movslq %eax,%rcx
 b3f:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
 b46:	48 01 c8             	add    %rcx,%rax
 b49:	0f b6 00             	movzbl (%rax),%eax
 b4c:	31 f0                	xor    %esi,%eax
 b4e:	88 02                	mov    %al,(%rdx)
 b50:	eb 50                	jmp    ba2 <pyrin+0x158>
 b52:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax
 b58:	48 63 d0             	movslq %eax,%rdx
 b5b:	48 8b 45 90          	mov    -0x70(%rbp),%rax
 b5f:	48 8d 1c 02          	lea    (%rdx,%rax,1),%rbx
 b63:	8b 85 78 ff ff ff    	mov    -0x88(%rbp),%eax
 b69:	48 98                	cltq   
 b6b:	44 0f b6 64 05 a0    	movzbl -0x60(%rbp,%rax,1),%r12d
 b71:	e8 9a fc ff ff       	callq  810 <p_rand@plt>
 b76:	48 89 c1             	mov    %rax,%rcx
 b79:	48 ba b1 d7 65 fc fd 	movabs $0x97b7a8fdfc65d7b1,%rdx
 b80:	a8 b7 97 
 b83:	48 89 c8             	mov    %rcx,%rax
 b86:	48 f7 e2             	mul    %rdx
 b89:	48 89 d0             	mov    %rdx,%rax
 b8c:	48 c1 e8 0f          	shr    $0xf,%rax
 b90:	48 69 c0 fb d7 00 00 	imul   $0xd7fb,%rax,%rax
 b97:	48 29 c1             	sub    %rax,%rcx
 b9a:	48 89 c8             	mov    %rcx,%rax
 b9d:	44 31 e0             	xor    %r12d,%eax
 ba0:	88 03                	mov    %al,(%rbx)
 ba2:	83 85 78 ff ff ff 01 	addl   $0x1,-0x88(%rbp)
 ba9:	83 bd 78 ff ff ff 3f 	cmpl   $0x3f,-0x88(%rbp)
 bb0:	0f 8e 56 ff ff ff    	jle    b0c <pyrin+0xc2>
 bb6:	e9 f7 00 00 00       	jmpq   cb2 <pyrin+0x268>
 bbb:	66 0f ef c0          	pxor   %xmm0,%xmm0
 bbf:	f2 0f 2a 45 88       	cvtsi2sdl -0x78(%rbp),%xmm0
 bc4:	f2 0f 10 0d 1c 01 00 	movsd  0x11c(%rip),%xmm1        # ce8 <_fini+0x10>
 bcb:	00 
 bcc:	f2 0f 5e c1          	divsd  %xmm1,%xmm0
 bd0:	f2 0f 5a c0          	cvtsd2ss %xmm0,%xmm0
 bd4:	e8 d7 fb ff ff       	callq  7b0 <ceil@plt>
 bd9:	89 45 8c             	mov    %eax,-0x74(%rbp)
 bdc:	c7 85 7c ff ff ff 00 	movl   $0x0,-0x84(%rbp)
 be3:	00 00 00 
 be6:	e9 b8 00 00 00       	jmpq   ca3 <pyrin+0x259>
 beb:	bf 41 00 00 00       	mov    $0x41,%edi
 bf0:	e8 0b fc ff ff       	callq  800 <malloc@plt>
 bf5:	48 89 45 98          	mov    %rax,-0x68(%rbp)
 bf9:	c7 45 80 40 00 00 00 	movl   $0x40,-0x80(%rbp)
 c00:	8b 45 8c             	mov    -0x74(%rbp),%eax
 c03:	83 e8 01             	sub    $0x1,%eax
 c06:	3b 85 7c ff ff ff    	cmp    -0x84(%rbp),%eax
 c0c:	75 13                	jne    c21 <pyrin+0x1d7>
 c0e:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
 c14:	c1 e0 06             	shl    $0x6,%eax
 c17:	89 c2                	mov    %eax,%edx
 c19:	8b 45 88             	mov    -0x78(%rbp),%eax
 c1c:	29 d0                	sub    %edx,%eax
 c1e:	89 45 80             	mov    %eax,-0x80(%rbp)
 c21:	8b 45 80             	mov    -0x80(%rbp),%eax
 c24:	48 63 d0             	movslq %eax,%rdx
 c27:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
 c2d:	c1 e0 06             	shl    $0x6,%eax
 c30:	48 63 c8             	movslq %eax,%rcx
 c33:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
 c3a:	48 01 c1             	add    %rax,%rcx
 c3d:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 c41:	48 89 ce             	mov    %rcx,%rsi
 c44:	48 89 c7             	mov    %rax,%rdi
 c47:	e8 54 fb ff ff       	callq  7a0 <strncpy@plt>
 c4c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 c50:	48 89 c7             	mov    %rax,%rdi
 c53:	e8 98 fb ff ff       	callq  7f0 <pyrin@plt>
 c58:	48 89 45 98          	mov    %rax,-0x68(%rbp)
 c5c:	c7 45 84 00 00 00 00 	movl   $0x0,-0x7c(%rbp)
 c63:	eb 31                	jmp    c96 <pyrin+0x24c>
 c65:	8b 45 84             	mov    -0x7c(%rbp),%eax
 c68:	48 63 d0             	movslq %eax,%rdx
 c6b:	48 8b 45 90          	mov    -0x70(%rbp),%rax
 c6f:	48 01 c2             	add    %rax,%rdx
 c72:	8b 45 84             	mov    -0x7c(%rbp),%eax
 c75:	48 98                	cltq   
 c77:	0f b6 44 05 a0       	movzbl -0x60(%rbp,%rax,1),%eax
 c7c:	89 c6                	mov    %eax,%esi
 c7e:	8b 45 84             	mov    -0x7c(%rbp),%eax
 c81:	48 63 c8             	movslq %eax,%rcx
 c84:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 c88:	48 01 c8             	add    %rcx,%rax
 c8b:	0f b6 00             	movzbl (%rax),%eax
 c8e:	31 f0                	xor    %esi,%eax
 c90:	88 02                	mov    %al,(%rdx)
 c92:	83 45 84 01          	addl   $0x1,-0x7c(%rbp)
 c96:	83 7d 84 3f          	cmpl   $0x3f,-0x7c(%rbp)
 c9a:	7e c9                	jle    c65 <pyrin+0x21b>
 c9c:	83 85 7c ff ff ff 01 	addl   $0x1,-0x84(%rbp)
 ca3:	8b 85 7c ff ff ff    	mov    -0x84(%rbp),%eax
 ca9:	3b 45 8c             	cmp    -0x74(%rbp),%eax
 cac:	0f 8c 39 ff ff ff    	jl     beb <pyrin+0x1a1>
 cb2:	48 8b 45 90          	mov    -0x70(%rbp),%rax
 cb6:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
 cba:	64 48 33 1c 25 28 00 	xor    %fs:0x28,%rbx
 cc1:	00 00 
 cc3:	74 05                	je     cca <pyrin+0x280>
 cc5:	e8 16 fb ff ff       	callq  7e0 <__stack_chk_fail@plt>
 cca:	48 81 c4 90 00 00 00 	add    $0x90,%rsp
 cd1:	5b                   	pop    %rbx
 cd2:	41 5c                	pop    %r12
 cd4:	5d                   	pop    %rbp
 cd5:	c3                   	retq   

Disassembly of section .fini:

0000000000000cd8 <_fini>:
 cd8:	48 83 ec 08          	sub    $0x8,%rsp
 cdc:	48 83 c4 08          	add    $0x8,%rsp
 ce0:	c3                   	retq   
